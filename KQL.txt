// known malicious IPs
let known_malicious_ips = dynamic(["88.214.57.51", "125.25.45.142", "218.92.0.231", "23.160.56.113"]);
// internal IPs to exclude
let internal_exclusions = dynamic(["127.0.0.53", "169.254.169.254"]);
// get devices that were accessed by known malicious IPs
let file_events =
    DeviceFileEvents
    | where TimeGenerated > ago(10d)
    | where DeviceName in (
        DeviceLogonEvents
        | where TimeGenerated > ago(10d)
        | where RemoteIP in (known_malicious_ips)
        | where ActionType == "LogonSuccess"
        | summarize by DeviceName
    )
    | project file_time = TimeGenerated, DeviceName, FileName, SHA256, FolderPath, FileAction = ActionType;
// extract network events from those same devices
let network_events =
    DeviceNetworkEvents
    | where TimeGenerated > ago(10d)
    | where ActionType == "ConnectionSuccess"
    | where DeviceName in (file_events | summarize by DeviceName)
    | project net_time = TimeGenerated, DeviceName, LocalIP, RemoteIP, RemotePort, InitiatingProcessFileName, InitiatingProcessSHA256, InitiatingProcessCommandLine;
// correlate file and network activity
file_events
| join kind=inner (
    network_events
) on DeviceName
| where abs(datetime_diff("minute", file_time, net_time)) <= 2
| where tostring(RemoteIP) !in (internal_exclusions)
| summarize connection_count = count() by RemoteIP
| extend Category = "Suspicious IP"
| project RemoteIP, connection_count, Category
| order by connection_count desc
// output: total_connection_counts.csv
